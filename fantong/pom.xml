<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.hobocat</groupId>
  <artifactId>fantong</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>fantong</name>
  <url>http://maven.apache.org</url>
  
  <!-- 版本管理 -->
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<springVersion>4.3.1.RELEASE</springVersion>
  	<hibernateVersion>4.3.5.Final</hibernateVersion>
  	<jstlVersion>1.2</jstlVersion>
  	<taglibVersion>1.1.2</taglibVersion>
  	<servletVersion>3.0-alpha-1</servletVersion>
  	<jsonVersion>1.9.13</jsonVersion>
  	<jacksonVersion>2.5.0</jacksonVersion>
  	<mysqlVersion>5.1.38</mysqlVersion>
  	<c3p0Version>0.9.1.2</c3p0Version>
  	<log4jVersion>1.2.17</log4jVersion>
  	<fileuploadVersion>1.3.1</fileuploadVersion>
  	<commons.lang.Version>2.6</commons.lang.Version>
  	<commons.beanutils.version>1.8.3</commons.beanutils.version>
  	<commons.io.version>2.4</commons.io.version>
  	<jsp.version>2.2</jsp.version>
  </properties>
  
  <dependencies>
  	<!-- 单元测试 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <!-- spring-->
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-beans</artifactId>
    	<version>${springVersion}</version>
    </dependency>
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-core</artifactId>
    	<version>${springVersion}</version>
    </dependency>
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-context</artifactId>
    	<version>${springVersion}</version>
    </dependency>
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-orm</artifactId>
    	<version>${springVersion}</version>
    </dependency>
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-aop</artifactId>
    	<version>${springVersion}</version>
    </dependency>
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-tx</artifactId>
    	<version>${springVersion}</version>
    </dependency>
    <!-- spring web + spring MVC-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${springVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${springVersion}</version>
    </dependency>
    <!-- hibernate配置-->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernateVersion}</version>
    </dependency>
    <!-- hibernate 缓存, 视情况添加-->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-ehcache</artifactId>
      <version>${hibernateVersion}</version>
    </dependency>
    <!-- jsp页面使用的jstl支持-->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstlVersion}</version>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>${taglibVersion}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servletVersion}</version>
      <scope>provided</scope>
    </dependency>
    <!-- DataBase数据库连接 mysql包-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysqlVersion}</version>
    </dependency>
    <!-- 数据库连接池-->
    <dependency>
      <groupId>c3p0</groupId>
      <artifactId>c3p0</artifactId>
      <version>${c3p0Version}</version>
    </dependency>
    <!-- json数据 使springMVC可以返回json值 ,视情况添加-->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>${jsonVersion}</version>
    </dependency>
    <!-- Jackson可以轻松的将Java对象转换成json对象和xml文档,同样也可以将json、xml转换成Java对象-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jacksonVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jacksonVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jacksonVersion}</version>
    </dependency>
    <!-- log4j配置, 视情况添加-->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4jVersion}</version>
    </dependency>
    <!--文件 上传-->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${fileuploadVersion}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>fantong</finalName>
  </build>
  
  <profiles>
  	<profile>
  		<id>pro</id>
  		<activation>
  			<property>
  				<name>env</name>
  				<value>pro</value>
  			</property>
  		</activation>
  		<build>
  			<finalName>fantong</finalName>
  			<plugins>
  				<plugin>
  					<groupId>org.apache.maven.plugins</groupId>
  					<artifactId>maven-war-plugin</artifactId>
  					<configuration>
  						<webResources>
  							<resource>
  								<!-- this is relative to the pom.xml 
                                        directory -->
                                <directory>src\main\resources\pro_conf\</directory>
                                <!-- override the destination directory 
                                        for this resource -->
                                <targetPath>WEB-INF\classes\</targetPath>
                                <!-- 是否过滤文件，也就是是否启动auto-config的功能 -->
                                <filtering>false</filtering>        
  							</resource>
  							<!-- 直接复制不用压缩的文件，图片，已经压缩的css，js， 放到上边的resource中 -->
                            <!-- <resource> <directory>${basedir}/WEB-INF/views</directory> 
                            <includes> <include>**/*.min.js</include> <include>**/*-min.js</include> 
                            <include>**/*jquery*.css</include> </includes> </resource> -->
  						</webResources>
  						<warSourceExcludes>**/*.css, **/*.js</warSourceExcludes>
  					</configuration>
  				</plugin>
  				<!-- 压缩js css -->
  				<plugin>
  					<groupId>net.alchim31.maven</groupId>
  					<artifactId>yuicompressor-maven-plugin</artifactId>
  					<version>1.3.0</version>
  					<executions>
  						<execution>
  							<goals>
  								<goal>compress</goal>
  							</goals>
  						</execution>
  					</executions>
  					<configuration>
  						<!-- 包含js文件和css文件 -->
  						<includes>
  							<include>**/*.js</include>
  							<include>**/*.css</include>
  						</includes>
  						<!-- 排除本来就压缩的js文件，比如jquery.min.js xxx-min.js之类的文件 不然报错-->
  						<excludes>
  							<exclude>**/*.min.js</exclude>
  						</excludes>
  						<encoding>utf-8</encoding>
  						<force>true</force>
  						<nosuffix>true</nosuffix>
  						
  						<linebreakpos>-1</linebreakpos>
  						<sourceDirectory>${basedir}/WEB-INF/views</sourceDirectory>
  						<jswarn>false</jswarn>
  					</configuration>
  				</plugin>
  			</plugins>
  		</build>
  	</profile>
  	
  	<profile>
  		<id>plan</id>
  		<activation>
  			<property>
  				<name>env</name>
  				<value>plan</value>
  			</property>
  		</activation>
  		<build>
  			<finalName>fantong</finalName>
  			<plugins>
  				<plugin>
  					<groupId>org.apache.maven.plugins</groupId>
  					<artifactId>maven-war-plugin</artifactId>
<!--   					<version>1.3</version> -->
  					<configuration>
  						<webResources>
  							<resource>
  								<!-- this is relative to the pom.xml 
                                        directory -->
                                <directory>src\main\resources\pro_conf\</directory>
                                <!-- override the destination directory 
                                        for this resource -->
                                <targetPath>WEB-INF\classes\</targetPath>
                                <!-- 是否过滤文件，也就是是否启动auto-config的功能 -->
                                <filtering>false</filtering>
  							</resource>
                            <!-- 直接复制不用压缩的文件，图片，已经压缩的css，js， 放到上边的resource中 -->
                            <!-- <resource> <directory>${basedir}/WEB-INF/views</directory> 
                            <includes> <include>**/*.min.js</include> <include>**/*-min.js</include> 
                            <include>**/*jquery*.css</include> </includes> </resource> -->
  						</webResources>
						<warSourceExcludes>**/*.css, **/*.js</warSourceExcludes>
  					</configuration>
  				</plugin>
  				<!-- 压缩js css -->
  				<plugin>
  					<groupId>net.alchim31.maven</groupId>
  					<artifactId>yuicompressor-maven-plugin</artifactId>
  					<version>1.3.0</version>
  					<executions>
  						<execution>
  							<goals>
  								<goal>compress</goal>
  							</goals>
  						</execution>
  					</executions>
  					<configuration>
  						<!-- 包含js文件和css文件 -->
  						<includes>
  							<include>**/*.js</include>
  							<include>**/*.css</include>
  						</includes>
  						<!-- 排除本来就压缩的js文件，比如jquery.min.js xxx-min.js之类的文件 不然报错-->
  						<excludes>
  							<exclude>**/*.min.js</exclude>
  						</excludes>
  						<encoding>utf-8</encoding>
  						<force>true</force>
  						<nosuffix>true</nosuffix>
  						
  						<linebreakpos>-1</linebreakpos>
  						<sourceDirectory>${basedir}/WEB-INF/views</sourceDirectory>
  						<jswarn>false</jswarn>
  					</configuration>
  				</plugin>
  			</plugins>
  		</build>
  	</profile>
  </profiles>
</project>
